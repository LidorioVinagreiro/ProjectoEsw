o ficheiro de bower contem as dependencias de bibliotecas do projecto!
atencao se for preciso adicionar alguma bibbliteca!
bootstrap:webdesign-> já tem classes para melhorar aparecia e não só
ver : https://docs.microsoft.com/en-us/aspnet/core/client-side/bootstrap

jquery validation -> validacoes do lado do cliente
jquery validation unbrosive -> validcoes do lado do cliente
atenção aos scripts necessarios para certo tipo de accoes!
: mais tarde fazer render dos scripts para cada pagina!

_viewStart -> meter codigo que existe em todas as views!
_viewimports -> meter modelos que sao importados pelas mesmas views @model ________

nas views podemos meter os pacotes que estamos a usar: using microsoft.****

nas views podemos injectar classes que estamos a usar : @inject *tipoCLasse *nomeDaClasse
exemplos de uso: quando uma view mostra uma coisa para uns utilizadores e nao para outros


DEPENDENCY INJECTION : serve para uso de classes em outras classes sem terem uma ligação directa com NEW
CRIAR UMA INTERFACE
CRIAR UMA CLASS COM ESSA INTERFACE
adicionar ao servico pelo configureServices esta no startup
	é adicionado como : 
		services.addTrasient< <interface> ,<class> >();
			Transient lifetime services are created each time they are requested. 
			This lifetime works best for lightweight, stateless services.
		services.addScoped< <interface> ,<class> >();
			Scoped lifetime services are created once per request.
		services.addSingleton< <interface> ,<class> >();
			https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection : search singleton
			
se precisarmos da injeccao num so metodo entao usar IActionresult <name> ([FromServices] <service name>)
___________________________controlllers______________________________________________
ViewResult – Represents HTML and markup.
EmptyResult – Represents no result.
RedirectResult – Represents a redirection to a new URL.
JsonResult – Represents a JavaScript Object Notation result that can be used in an AJAX application.
JavaScriptResult – Represents a JavaScript script.
ContentResult – Represents a text result.
FileContentResult – Represents a downloadable file (with the binary content).
FilePathResult – Represents a downloadable file (with a path).
FileStreamResult – Represents a downloadable file (with a file stream).
---->tipos de action results!!!!

@model Tuple<ProjectoEsw.Models.Identity.Perfil, ProjectoEsw.Models.Calendario.Eventos>;

no controller : var model = new Tuple<Perfil,Eventos>(user.Perfil, new Eventos { });    